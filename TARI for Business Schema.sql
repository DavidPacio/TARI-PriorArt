/******************************************************************************/
/****       Generated by IBExpert 2017.2.26.1 28/11/2017 11:27:04 AM       ****/
/******************************************************************************/

/******************************************************************************/
/****     Following SET SQL DIALECT is just for the Database Comparer      ****/
/******************************************************************************/
SET SQL DIALECT 3;



/******************************************************************************/
/****                               Domains                                ****/
/******************************************************************************/

CREATE DOMAIN ACCOUNTNAME AS
VARCHAR(70);

CREATE DOMAIN ACCOUNTSUB AS
VARCHAR(100);

CREATE DOMAIN D_BOOLEAN AS
SMALLINT
DEFAULT 0
check (Value between 0 and 1);

CREATE DOMAIN D_BOOLEANTRUE AS
SMALLINT
DEFAULT 1
CHECK (Value between 0 and 1);

CREATE DOMAIN D_CURRENCY AS
NUMERIC(18,2);

CREATE DOMAIN FILENAME AS
VARCHAR(100);

CREATE DOMAIN YEARBALANCES AS
NUMERIC(18,2);



/******************************************************************************/
/****                              Generators                              ****/
/******************************************************************************/

CREATE GENERATOR DEPT_NO_GEN;
SET GENERATOR DEPT_NO_GEN TO 0;

CREATE GENERATOR GEN_BUSINESS_BRANCH_ID;
SET GENERATOR GEN_BUSINESS_BRANCH_ID TO 0;

CREATE GENERATOR GEN_DEPT_OPTION_GROUPS_ID;
SET GENERATOR GEN_DEPT_OPTION_GROUPS_ID TO 1;

CREATE GENERATOR GEN_IMPORT_HEADER_ID;
SET GENERATOR GEN_IMPORT_HEADER_ID TO 0;

CREATE GENERATOR GEN_JOURNAL_ID;
SET GENERATOR GEN_JOURNAL_ID TO 1;

CREATE GENERATOR GEN_OPTIONNAMES_ID;
SET GENERATOR GEN_OPTIONNAMES_ID TO 17;

CREATE GENERATOR GEN_TRANSACTIONS_ID;
SET GENERATOR GEN_TRANSACTIONS_ID TO 0;

CREATE GENERATOR GEN_TRANS_SOURCES_ID;
SET GENERATOR GEN_TRANS_SOURCES_ID TO 6;

CREATE GENERATOR IMPORTED_DATA_SEQ;
SET GENERATOR IMPORTED_DATA_SEQ TO 0;

CREATE GENERATOR IMPORT_PARAMS_GEN;
SET GENERATOR IMPORT_PARAMS_GEN TO 6;

CREATE GENERATOR INV_NO_GEN;
SET GENERATOR INV_NO_GEN TO 76;

CREATE GENERATOR TEMP_ID_GEN;
SET GENERATOR TEMP_ID_GEN TO 1;

CREATE GENERATOR TRACKING_JNL_GEN;
SET GENERATOR TRACKING_JNL_GEN TO 0;



/******************************************************************************/
/****                          Stored procedures                           ****/
/******************************************************************************/



SET TERM ^ ;

CREATE PROCEDURE CREATE_BUSINESS (
    BUS_NAME VARCHAR(100),
    LAST_DAY SMALLINT,
    P_START DATE,
    P_END DATE,
    CURR_NAME VARCHAR(50),
    CURR_SYMBOL CHAR(10),
    CONVERSION DOUBLE PRECISION,
    DEFAULT_DEPT INTEGER)
AS
BEGIN
  EXIT;
END^






SET TERM ; ^



/******************************************************************************/
/****                                Tables                                ****/
/******************************************************************************/



CREATE TABLE ACCOUNT_GROUPS (
    ACCOUNT_GRP_ID  INTEGER NOT NULL,
    GROUP_NAME      VARCHAR(100),
    GROUP_DR_SIGN   D_BOOLEAN
);

CREATE TABLE ACCOUNT_NOTES (
    DEPT_ID     INTEGER NOT NULL,
    NOTE_DATE   DATE NOT NULL,
    ACCOUNT_NO  INTEGER NOT NULL,
    NOTE_NO     INTEGER,
    NOTE_TEXT   VARCHAR(1024)
);

CREATE TABLE ACCOUNT_TITLES (
    ACCOUNT_NUMBER       INTEGER NOT NULL,
    ACCOUNT_GROUP        INTEGER NOT NULL,
    ACCOUNT_TITLE        ACCOUNTNAME,
    ACCOUNT_SUBTITLE     ACCOUNTSUB,
    STATIC_VALUE         D_BOOLEAN,
    NON_CASH             D_BOOLEAN,
    WAGE_ACCOUNT         D_BOOLEAN,
    INTEREST_ACCOUNT     D_BOOLEAN,
    DR_CASHFLOW_ACCOUNT  INTEGER,
    CR_CASHFLOW_ACCOUNT  INTEGER
);

CREATE TABLE ACTUAL (
    DEPT_ID         INTEGER NOT NULL,
    ACCOUNT_NUMBER  INTEGER NOT NULL,
    PERIODEND       DATE NOT NULL,
    BAL             D_CURRENCY
);

CREATE TABLE ACTUAL_INVOICE_DETAILS (
    DEPT_ID          INTEGER NOT NULL,
    INVOICETYPE      INTEGER NOT NULL,
    INV_DATE         DATE NOT NULL,
    INVOICE_ID       INTEGER NOT NULL,
    QUOTE_NUMBER     VARCHAR(20),
    INVOICE_NUMBER   VARCHAR(20),
    NETSALES         D_CURRENCY,
    MATERIALSATCOST  D_CURRENCY,
    SUBCONTRACTORS   D_CURRENCY,
    UNITSREQUIRED    D_CURRENCY,
    ORDERCOMPLETE    D_BOOLEAN,
    UNITSTORUN       D_CURRENCY,
    RECORDEDUNITS    D_CURRENCY
);

CREATE TABLE BUSINESS_BRANCH (
    BRANCH_ID               INTEGER NOT NULL,
    BRANCH_NAME             VARCHAR(100),
    HIDDEN_DEPT             INTEGER,
    CURRENCY                VARCHAR(50),
    CURRENCY_SYMBOL         CHAR(10),
    CONVERSION_RATE         DOUBLE PRECISION,
    TARGET_START            DATE,
    TARGET_END              DATE,
    TRACKING_START          DATE,
    TRACKING_END            DATE,
    LASTDAYOFWEEK           SMALLINT,
    EXCLUDE_FROM_REPORTING  D_BOOLEAN NOT NULL
);

CREATE TABLE BUSINESS_DETAILS (
    BUSINESS_NAME       VARCHAR(100) NOT NULL,
    DATE_LAST_ACCESSED  TIMESTAMP default 'now' NOT NULL,
    MAINDEPT            INTEGER
);

CREATE TABLE BUSINESSHOURS (
    DEPT_ID        INTEGER NOT NULL,
    NOTOPEN        DATE NOT NULL,
    ONLYOPENHOURS  D_CURRENCY
);

CREATE TABLE CASH_TIMING (
    ACCOUNT_CODE   INTEGER NOT NULL,
    TIMING_INDEX   INTEGER NOT NULL,
    PERCENTAGE     D_CURRENCY,
    T_YEAR         VARCHAR(5),
    T_QUARTER      VARCHAR(5),
    T_MONTH        VARCHAR(5),
    T_WEEK         VARCHAR(5),
    T_DAY          VARCHAR(5),
    T_DAYS_SPREAD  INTEGER DEFAULT 1
);

CREATE TABLE DATERANGERS (
    DEPT_ID        INTEGER NOT NULL,
    ENDDATE        DATE NOT NULL,
    STARTDATE      DATE NOT NULL,
    D_INDEX        INTEGER,
    CURRENTPERIOD  D_BOOLEAN NOT NULL
);

CREATE TABLE DEPARTMENTS (
    DEPT_ID                 INTEGER NOT NULL,
    BRANCH_ID               INTEGER,
    REVENUE_GROUP_NAME      VARCHAR(60),
    REPORT_CODE1            VARCHAR(30),
    REPORT_CODE2            VARCHAR(30),
    LAST_MONITORED          DATE,
    EXCLUDE_FROM_REPORTING  D_BOOLEAN,
    CURRENCY                CHAR(10),
    SINGULAR_UNITDESC       VARCHAR(50),
    PLURAL_UNITDESC         VARCHAR(50),
    LASTDAYOFWEEK           SMALLINT,
    CURRENTPLANSTART        DATE,
    CURRENTPLANEND          DATE,
    COPIEDFROM              INTEGER,
    FIRSTPLANDATE           DATE,
    LATESTPLANDATE          DATE,
    LASTSUMMARYPERIOD       INTEGER,
    CURRENTMONITORINGSTART  DATE,
    CURRENTMONITORINGEND    DATE,
    FIRSTMONITORINGDATE     DATE,
    INVGROUPNAME            VARCHAR(50),
    INVOICEPASSWORD         VARCHAR(20),
    HIDDEN_DEPT             D_BOOLEAN DEFAULT 0 NOT NULL,
    SYNC_TARGETDATE         D_BOOLEAN,
    SYNC_TRACKDATE          D_BOOLEAN,
    EXCLUDE_FROM_CASHFLOW   D_BOOLEAN
);

CREATE TABLE DEPT_ACCOUNTS (
    DEPT_ID                INTEGER NOT NULL,
    ACCOUNT_NUMBER         INTEGER NOT NULL,
    TAX_RATE               D_CURRENCY,
    PAID_VIA_AP            D_BOOLEAN,
    BALANCE_SHEET_ACCOUNT  INTEGER
);

CREATE TABLE DEPT_OPTION_GROUPS (
    DEPT_ID          INTEGER NOT NULL,
    OPTION_GROUP_ID  INTEGER NOT NULL,
    EXPIRY_DATE      DATE NOT NULL
);

CREATE TABLE DETAILED_BALANCES (
    DEPT_ID         INTEGER NOT NULL,
    ACCOUNT_NUMBER  INTEGER NOT NULL,
    D_YEAR          INTEGER NOT NULL,
    D_TYPE          SMALLINT NOT NULL,
    D_BALS          BLOB SUB_TYPE -1 SEGMENT SIZE 2976
);

CREATE TABLE IMPORT_HEADER (
    DEPT_ID             INTEGER NOT NULL,
    IMPORT_ID           INTEGER NOT NULL,
    TEMPLATE_ID         INTEGER,
    IMPORT_DESCRIPTION  VARCHAR(100),
    PERIOD_START        DATE NOT NULL,
    PERIOD_END          DATE NOT NULL,
    USE_ACCOUNT_NUMBER  D_BOOLEAN DEFAULT         1 NOT NULL,
    IS_YTD              D_BOOLEAN DEFAULT       1 NOT NULL,
    DESTINATION         VARCHAR(40) NOT NULL
);

CREATE TABLE IMPORT_TEMPLATES (
    TEMPLATE_ID     INTEGER NOT NULL,
    TEMPLATE_NAME   VARCHAR(100),
    IMPORT_PROFILE  VARCHAR(2048)
);

CREATE TABLE IMPORTED_DATA (
    SEQUENCE_NUMBER  INTEGER NOT NULL,
    IMPORT_ID        INTEGER NOT NULL,
    ACC_NUMBER       VARCHAR(25),
    ACCOUNT_TITLE    VARCHAR(100),
    DR_AMOUNT        NUMERIC(18,2),
    CR_AMOUNT        NUMERIC(18,2),
    ACCOUNT_NUMBER   INTEGER DEFAULT         1500 NOT NULL
);

CREATE TABLE JNL_ENTRIES (
    JNL_NO      INTEGER NOT NULL,
    JNL_INDEX   INTEGER NOT NULL,
    ACCOUNT_NO  INTEGER,
    DR_AMOUNT   D_CURRENCY,
    CR_AMOUNT   D_CURRENCY,
    LINE_NOTE   VARCHAR(200)
);

CREATE TABLE JOURNAL (
    DEPT_ID   INTEGER NOT NULL,
    JNL_NO    INTEGER NOT NULL,
    JNL_DATE  DATE,
    NON_CASH  D_BOOLEANTRUE,
    JNL_NOTE  VARCHAR(200)
);

CREATE TABLE LICENCING (
    LIC_ID            INTEGER NOT NULL,
    BUSINESS_NAME     VARCHAR(100),
    CONTACT_NAME      VARCHAR(100),
    ADDRESS1          VARCHAR(50),
    ADDRESS2          VARCHAR(50),
    SUBURB            VARCHAR(50),
    STATE_REGION      VARCHAR(30),
    POST_CODE         VARCHAR(20),
    COUNTRY           VARCHAR(40),
    PHONE_NUMBER      VARCHAR(40),
    FAX_NUMBER        VARCHAR(40),
    EMAIL_ADDRESS     VARCHAR(60),
    SERIALNUMBER      VARCHAR(20),
    SUPPLIER_ID       INTEGER,
    SITENUMBER        INTEGER,
    LICENCEENAME      VARCHAR(100),
    LICENCETYPE       VARCHAR(5),
    BUSINESSFILENAME  FILENAME,
    EXPIRYDATE        DATE,
    NUMBEROFUSERS     INTEGER,
    LICENCENUMBER     VARCHAR(20)
);

CREATE TABLE LOSYSTEM (
    DBVERSION   VARCHAR(10) NOT NULL,
    DBPASSWORD  VARCHAR(32) CHARACTER SET OCTETS,
    GRANT_SET   D_BOOLEAN NOT NULL
);

CREATE TABLE OPTIONNAMES (
    NAME_INDEX   INTEGER NOT NULL,
    OPTION_NAME  VARCHAR(40) NOT NULL
);

CREATE TABLE QUOTES (
    DEPT_ID           INTEGER NOT NULL,
    QUOTE_NUMBER      VARCHAR(20) NOT NULL,
    CUSTOMERNAME      VARCHAR(50),
    Q_DATE            DATE,
    Q_VALUE           D_CURRENCY,
    Q_MATERIALS       D_CURRENCY,
    Q_SUBCONTRACTORS  D_CURRENCY,
    TARGETUNITS       D_CURRENCY
);

CREATE TABLE SUMMARYINTERVALS (
    PERIOD_ID    INTEGER NOT NULL,
    PERIOD_DESC  VARCHAR(20)
);

CREATE TABLE TEMPLATE_DETAILS (
    TEMPLATE_ID     INTEGER NOT NULL,
    SOURCE_ID       VARCHAR(100) NOT NULL,
    SRC_ACCOUNT_NO  INTEGER NOT NULL,
    ACCOUNT_NUMBER  INTEGER
);

CREATE TABLE TRACKING_JENTRIES (
    JNL_NO      INTEGER NOT NULL,
    JNL_INDEX   INTEGER NOT NULL,
    ACCOUNT_NO  INTEGER,
    DR_AMOUNT   D_CURRENCY,
    CR_AMOUNT   D_CURRENCY,
    LINE_NOTE   VARCHAR(200)
);

CREATE TABLE TRACKING_JOURNAL (
    DEPT_ID      INTEGER NOT NULL,
    JNL_NO       INTEGER NOT NULL,
    START_DATE   DATE NOT NULL,
    END_DATE     DATE NOT NULL,
    DESCRIPTION  VARCHAR(200)
);

CREATE TABLE TRANS_SOURCES (
    TRANSSRC_ID           INTEGER NOT NULL,
    TRANSSRC_DESCRIPTION  VARCHAR(30)
);

CREATE TABLE TRANSACTIONS (
    DEPT_ID         INTEGER NOT NULL,
    TRANSSRC_ID     INTEGER NOT NULL,
    TRANS_DATE      DATE NOT NULL,
    TRANS_ID        INTEGER NOT NULL,
    SRC_ID          INTEGER,
    ACCOUNT_NUMBER  INTEGER NOT NULL,
    AMOUNT          D_CURRENCY,
    QUANTITY        D_CURRENCY,
    ISCASH          D_BOOLEAN DEFAULT        0 NOT NULL,
    NOTES           VARCHAR(200)
);

CREATE TABLE USER_OPTIONS (
    OPTION_GROUP_ID  INTEGER NOT NULL,
    NAMEINDEX        INTEGER NOT NULL,
    INTEGER_VALUE    INTEGER,
    CURRENCY_VALUE   D_CURRENCY,
    DATETIME_VALUE   TIMESTAMP,
    STRING_VALUE     VARCHAR(100)
);



/******************************************************************************/
/****                          Check constraints                           ****/
/******************************************************************************/

ALTER TABLE DATERANGERS ADD CONSTRAINT CHK_DATERANGERS check ((ENDDATE >= STARTDATE)  AND (ENDDATE - STARTDATE) < 366);


/******************************************************************************/
/****                             Primary keys                             ****/
/******************************************************************************/

ALTER TABLE ACCOUNT_GROUPS ADD CONSTRAINT PK_ACCOUNT_GROUPS PRIMARY KEY (ACCOUNT_GRP_ID);
ALTER TABLE ACCOUNT_NOTES ADD CONSTRAINT PK_ACCOUNT_NOTES PRIMARY KEY (DEPT_ID, NOTE_DATE, ACCOUNT_NO);
ALTER TABLE ACCOUNT_TITLES ADD CONSTRAINT PK_ACCOUNT_TITLES PRIMARY KEY (ACCOUNT_NUMBER);
ALTER TABLE ACTUAL ADD CONSTRAINT PK_ACTUAL PRIMARY KEY (DEPT_ID, ACCOUNT_NUMBER, PERIODEND);
ALTER TABLE ACTUAL_INVOICE_DETAILS ADD CONSTRAINT PK_ACTUAL_INVOICE_DETAILS PRIMARY KEY (DEPT_ID, INVOICETYPE, INV_DATE, INVOICE_ID);
ALTER TABLE BUSINESSHOURS ADD CONSTRAINT PK_BUSINESSHOURS PRIMARY KEY (DEPT_ID, NOTOPEN);
ALTER TABLE BUSINESS_BRANCH ADD CONSTRAINT PK_BUSINESS_BRANCH PRIMARY KEY (BRANCH_ID);
ALTER TABLE BUSINESS_DETAILS ADD PRIMARY KEY (BUSINESS_NAME);
ALTER TABLE CASH_TIMING ADD CONSTRAINT PK_CASH_TIMING PRIMARY KEY (ACCOUNT_CODE, TIMING_INDEX);
ALTER TABLE DATERANGERS ADD CONSTRAINT PK_DATERANGERS PRIMARY KEY (DEPT_ID, ENDDATE);
ALTER TABLE DEPARTMENTS ADD PRIMARY KEY (DEPT_ID);
ALTER TABLE DEPT_ACCOUNTS ADD CONSTRAINT PK_DEPT_ACCOUNTS PRIMARY KEY (DEPT_ID, ACCOUNT_NUMBER);
ALTER TABLE DEPT_OPTION_GROUPS ADD CONSTRAINT PK_DEPT_OPTION_GROUPS PRIMARY KEY (OPTION_GROUP_ID);
ALTER TABLE DETAILED_BALANCES ADD CONSTRAINT PK_DETAILED_BALANCES PRIMARY KEY (DEPT_ID, ACCOUNT_NUMBER, D_YEAR, D_TYPE);
ALTER TABLE IMPORTED_DATA ADD CONSTRAINT PK_IMPORTED_DATA PRIMARY KEY (SEQUENCE_NUMBER);
ALTER TABLE IMPORT_HEADER ADD CONSTRAINT PK_IMPORT_HEADER PRIMARY KEY (IMPORT_ID);
ALTER TABLE IMPORT_TEMPLATES ADD CONSTRAINT PK_IMPORT_TEMPLATES PRIMARY KEY (TEMPLATE_ID);
ALTER TABLE JNL_ENTRIES ADD CONSTRAINT PK_JNL_ENTRIES PRIMARY KEY (JNL_NO, JNL_INDEX);
ALTER TABLE JOURNAL ADD CONSTRAINT PK_JOURNAL PRIMARY KEY (JNL_NO);
ALTER TABLE LICENCING ADD CONSTRAINT PK_LICENCING PRIMARY KEY (LIC_ID);
ALTER TABLE LOSYSTEM ADD PRIMARY KEY (DBVERSION);
ALTER TABLE OPTIONNAMES ADD CONSTRAINT PK_OPTIONNAMES PRIMARY KEY (NAME_INDEX);
ALTER TABLE QUOTES ADD CONSTRAINT PK_QUOTES PRIMARY KEY (DEPT_ID, QUOTE_NUMBER);
ALTER TABLE SUMMARYINTERVALS ADD PRIMARY KEY (PERIOD_ID);
ALTER TABLE TEMPLATE_DETAILS ADD CONSTRAINT PK_TEMPLATE_DETAILS PRIMARY KEY (TEMPLATE_ID, SOURCE_ID);
ALTER TABLE TRACKING_JENTRIES ADD CONSTRAINT PK_TRACKING_JENTRIES PRIMARY KEY (JNL_NO, JNL_INDEX);
ALTER TABLE TRACKING_JOURNAL ADD CONSTRAINT PK_TRACKING_JOURNAL PRIMARY KEY (JNL_NO);
ALTER TABLE TRANSACTIONS ADD CONSTRAINT PK_TRANSACTIONS PRIMARY KEY (TRANS_ID);
ALTER TABLE TRANS_SOURCES ADD CONSTRAINT PK_TRANS_SOURCES PRIMARY KEY (TRANSSRC_ID);
ALTER TABLE USER_OPTIONS ADD CONSTRAINT PK_USER_OPTIONS PRIMARY KEY (OPTION_GROUP_ID, NAMEINDEX);


/******************************************************************************/
/****                             Foreign keys                             ****/
/******************************************************************************/

ALTER TABLE ACCOUNT_NOTES ADD CONSTRAINT FK_ACCOUNT_NOTES FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ACCOUNT_NOTES ADD CONSTRAINT FK_ACCOUNT_NOTES_DEPT FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ACCOUNT_TITLES ADD CONSTRAINT FK_ACCOUNT_TITLES FOREIGN KEY (ACCOUNT_GROUP) REFERENCES ACCOUNT_GROUPS (ACCOUNT_GRP_ID) ON UPDATE CASCADE;
ALTER TABLE ACTUAL ADD FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ACTUAL ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ACTUAL_INVOICE_DETAILS ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ACTUAL_INVOICE_DETAILS ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BUSINESSHOURS ADD CONSTRAINT FK_BUSINESSHOURS FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE CASH_TIMING ADD CONSTRAINT FK_CASH_TIMING_ACC FOREIGN KEY (ACCOUNT_CODE) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DATERANGERS ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DEPARTMENTS ADD CONSTRAINT FK_DEPT_BRANCH FOREIGN KEY (BRANCH_ID) REFERENCES BUSINESS_BRANCH (BRANCH_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DEPT_ACCOUNTS ADD CONSTRAINT FK_DEPT_ACCOUNTS_ACC FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DEPT_ACCOUNTS ADD CONSTRAINT FK_DEPT_ACCOUNTS_DEPT FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DEPT_OPTION_GROUPS ADD CONSTRAINT FK_DEPT_OPTION_GROUPS FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DETAILED_BALANCES ADD FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DETAILED_BALANCES ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE IMPORTED_DATA ADD CONSTRAINT FK_IMPORTED_ACC FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE IMPORTED_DATA ADD CONSTRAINT FK_IMPORTED_DATA FOREIGN KEY (IMPORT_ID) REFERENCES IMPORT_HEADER (IMPORT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE IMPORT_HEADER ADD CONSTRAINT FK_IMPORT_HDR_DEPT FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE IMPORT_HEADER ADD CONSTRAINT FK_IMPORT_HEADER FOREIGN KEY (TEMPLATE_ID) REFERENCES IMPORT_TEMPLATES (TEMPLATE_ID) ON UPDATE CASCADE;
ALTER TABLE JNL_ENTRIES ADD CONSTRAINT FK_JNL_ENTRIES FOREIGN KEY (JNL_NO) REFERENCES JOURNAL (JNL_NO) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE JNL_ENTRIES ADD CONSTRAINT FK_JNL_ENTRIES_ACC FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE JOURNAL ADD CONSTRAINT FK_JOURNAL FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE QUOTES ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE QUOTES ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TEMPLATE_DETAILS ADD CONSTRAINT FK_TEMPLATE_ACCOUNT FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TEMPLATE_DETAILS ADD CONSTRAINT FK_TEMPLATE_DETAILS FOREIGN KEY (TEMPLATE_ID) REFERENCES IMPORT_TEMPLATES (TEMPLATE_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRACKING_JENTRIES ADD CONSTRAINT FK_TRACKING_JENTRIES FOREIGN KEY (JNL_NO) REFERENCES TRACKING_JOURNAL (JNL_NO) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRACKING_JENTRIES ADD CONSTRAINT FK_TRACKING_JEN_ACC FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRACKING_JOURNAL ADD CONSTRAINT FK_TRACKING_JNL_DEPT FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRANSACTIONS ADD CONSTRAINT FK_TRANSACC FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES ACCOUNT_TITLES (ACCOUNT_NUMBER) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRANSACTIONS ADD CONSTRAINT FK_TRANSDEPT FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPT_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRANSACTIONS ADD CONSTRAINT FK_TRANSSRC FOREIGN KEY (TRANSSRC_ID) REFERENCES TRANS_SOURCES (TRANSSRC_ID) ON UPDATE CASCADE;
ALTER TABLE USER_OPTIONS ADD CONSTRAINT FK_USER_OPTIONS_GRP FOREIGN KEY (OPTION_GROUP_ID) REFERENCES DEPT_OPTION_GROUPS (OPTION_GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE USER_OPTIONS ADD CONSTRAINT FK_USER_OPTIONS_NAME FOREIGN KEY (NAMEINDEX) REFERENCES OPTIONNAMES (NAME_INDEX) ON DELETE CASCADE ON UPDATE CASCADE;


/******************************************************************************/
/****                               Indices                                ****/
/******************************************************************************/

CREATE INDEX SUBTITLEIDX ON ACCOUNT_TITLES (ACCOUNT_SUBTITLE, ACCOUNT_NUMBER);
CREATE INDEX TITLEIDX ON ACCOUNT_TITLES (ACCOUNT_TITLE, ACCOUNT_NUMBER);
CREATE INDEX ACTUAL_ACCOUNTIDX ON ACTUAL (ACCOUNT_NUMBER, PERIODEND, DEPT_ID);
CREATE INDEX ACTUAL_PEIDX ON ACTUAL (PERIODEND, ACCOUNT_NUMBER, DEPT_ID);
CREATE INDEX DEPTINVOICENUMIDX ON ACTUAL_INVOICE_DETAILS (DEPT_ID, INVOICETYPE, INVOICE_NUMBER);
CREATE INDEX INVDEPTIDX ON ACTUAL_INVOICE_DETAILS (DEPT_ID);
CREATE INDEX INVIDIDX ON ACTUAL_INVOICE_DETAILS (INVOICE_ID);
CREATE INDEX INVQUOTEIDX ON ACTUAL_INVOICE_DETAILS (DEPT_ID, QUOTE_NUMBER, INVOICETYPE, INV_DATE, INVOICE_ID);
CREATE INDEX INVTYPEIDX ON ACTUAL_INVOICE_DETAILS (DEPT_ID, INVOICETYPE, INVOICE_ID, INV_DATE);
CREATE UNIQUE INDEX BUSINESS_BRANCH_NAME ON BUSINESS_BRANCH (BRANCH_NAME, BRANCH_ID);
CREATE INDEX DATEINDEXIDX ON DATERANGERS (D_INDEX);
CREATE UNIQUE INDEX ENDDATEIDX ON DATERANGERS (ENDDATE, DEPT_ID);
CREATE UNIQUE INDEX BRANCH_DEPT_IDX ON DEPARTMENTS (BRANCH_ID, REVENUE_GROUP_NAME, DEPT_ID);
CREATE INDEX DEPTNAMEIDX ON DEPARTMENTS (REVENUE_GROUP_NAME, DEPT_ID);
CREATE INDEX DEPT_EXPIRY_DATE ON DEPT_OPTION_GROUPS (EXPIRY_DATE, DEPT_ID);
CREATE UNIQUE INDEX LOSYSTEM_IDX1 ON LOSYSTEM (DBVERSION);
CREATE UNIQUE INDEX OPTIONNAMES_IDX1 ON OPTIONNAMES (OPTION_NAME);
CREATE INDEX Q_CUSTIDX ON QUOTES (DEPT_ID, CUSTOMERNAME, QUOTE_NUMBER);
CREATE INDEX Q_DATEIDX ON QUOTES (DEPT_ID, Q_DATE, QUOTE_NUMBER);
CREATE UNIQUE INDEX ACCDATEID ON TRANSACTIONS (ACCOUNT_NUMBER, TRANS_DATE, TRANS_ID);
CREATE UNIQUE INDEX DEPTACCDATEID ON TRANSACTIONS (DEPT_ID, ACCOUNT_NUMBER, TRANS_DATE, TRANS_ID);
CREATE UNIQUE INDEX SRCDATEID ON TRANSACTIONS (TRANSSRC_ID, TRANS_DATE, TRANS_ID);


/******************************************************************************/
/****                               Triggers                               ****/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/****                         Triggers for tables                          ****/
/******************************************************************************/



/* Trigger: BUSINESS_BRANCH_BI */
CREATE TRIGGER BUSINESS_BRANCH_BI FOR BUSINESS_BRANCH
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.BRANCH_ID IS NULL) THEN
    NEW.BRANCH_ID = GEN_ID(GEN_BUSINESS_BRANCH_ID,1);
END
^

/* Trigger: DEPT_OPTION_GROUPS_BI */
CREATE TRIGGER DEPT_OPTION_GROUPS_BI FOR DEPT_OPTION_GROUPS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    NEW.OPTION_GROUP_ID = GEN_ID(GEN_DEPT_OPTION_GROUPS_ID,1);
END
^

/* Trigger: IMPORTED_DATA_BI0 */
CREATE TRIGGER IMPORTED_DATA_BI0 FOR IMPORTED_DATA
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  new.sequence_number = gen_id(imported_data_seq, 1);/* Trigger text */
end
^

/* Trigger: IMPORT_HEADER_BI */
CREATE TRIGGER IMPORT_HEADER_BI FOR IMPORT_HEADER
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.IMPORT_ID IS NULL) THEN
    NEW.IMPORT_ID = GEN_ID(GEN_IMPORT_HEADER_ID,1);
END
^

/* Trigger: IMPORT_TEMPLATES_BI0 */
CREATE TRIGGER IMPORT_TEMPLATES_BI0 FOR IMPORT_TEMPLATES
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  new.template_id = gen_id(temp_id_gen, 1);/* Trigger text */
end
^

/* Trigger: JOURNAL_BI */
CREATE TRIGGER JOURNAL_BI FOR JOURNAL
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.JNL_NO IS NULL) THEN
    NEW.JNL_NO = GEN_ID(GEN_JOURNAL_ID,1);
END
^

/* Trigger: OPTIONNAMES_BI */
CREATE TRIGGER OPTIONNAMES_BI FOR OPTIONNAMES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NAME_INDEX IS NULL) THEN
    NEW.NAME_INDEX = GEN_ID(GEN_OPTIONNAMES_ID,1);
END
^

/* Trigger: SET_DEPT_NO */
CREATE TRIGGER SET_DEPT_NO FOR DEPARTMENTS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    new.Dept_ID = gen_id(Dept_No_Gen, 1);
END
^

/* Trigger: SET_INV_NO */
CREATE TRIGGER SET_INV_NO FOR ACTUAL_INVOICE_DETAILS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    if (new.invoice_id is null) then
        new.Invoice_ID = gen_id(Inv_No_Gen, 1);
END
^

/* Trigger: TRACKING_JOURNAL_BI0 */
CREATE TRIGGER TRACKING_JOURNAL_BI0 FOR TRACKING_JOURNAL
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Trigger text */
  new.jnl_no = gen_id(tracking_jnl_gen, 1);
end
^

/* Trigger: TRANSACTIONS_BI */
CREATE TRIGGER TRANSACTIONS_BI FOR TRANSACTIONS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.TRANS_ID IS NULL) THEN
    NEW.TRANS_ID = GEN_ID(GEN_TRANSACTIONS_ID,1);
END
^

/* Trigger: TRANS_SOURCES_BI */
CREATE TRIGGER TRANS_SOURCES_BI FOR TRANS_SOURCES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.TRANSSRC_ID IS NULL) THEN
    NEW.TRANSSRC_ID = GEN_ID(GEN_TRANS_SOURCES_ID,1);
END
^
SET TERM ; ^



/******************************************************************************/
/****                          Stored procedures                           ****/
/******************************************************************************/



SET TERM ^ ;

ALTER PROCEDURE CREATE_BUSINESS (
    BUS_NAME VARCHAR(100),
    LAST_DAY SMALLINT,
    P_START DATE,
    P_END DATE,
    CURR_NAME VARCHAR(50),
    CURR_SYMBOL CHAR(10),
    CONVERSION DOUBLE PRECISION,
    DEFAULT_DEPT INTEGER)
AS
DECLARE VARIABLE M_START DATE;
DECLARE VARIABLE BRANCH_NO INTEGER;
DECLARE VARIABLE HIDDEN_NO INTEGER;
DECLARE VARIABLE M_END DATE;
DECLARE VARIABLE NO_BRANCHES SMALLINT;
begin
 /* Procedure Text */
  /* IS there any other Branches? */
  no_branches = 0;
  select FIRST 1 skip 0 branch_id, lastdayofweek from business_branch into :branch_no, :last_day;
  /* If no branchs, then the first department could have something we can use*/
  if (:branch_no is null) then
    begin
    select FIRST 1 skip 0 DEPT_ID, lastdayofweek FROM departments into :default_dept, :last_day;
    no_branches = 1;
    end
  if (:default_dept is not null) then
    begin
    select CURRENTPLANSTART, CURRENTPLANEND, CURRENCY, CURRENTMONITORINGSTART, CURRENTMONITORINGEND FROM departments where (DEPT_ID = :default_dept)
    into :p_start, :p_end, :curr_symbol, :m_start, m_end;
    end
  /* CREATE the Branch */
  if (:last_day is null) then
    begin
    last_day = 0;
    end
  branch_no = gen_id(GEN_BUSINESS_BRANCH_ID, 1);
  hidden_no = gen_id(DEPT_NO_GEN, 0) + 1;  /* The Trigger will always set the number to this value anyway */
  insert into business_branch (BRANCH_ID, BRANCH_NAME, HIDDEN_DEPT, CURRENCY, CURRENCY_SYMBOL, CONVERSION_RATE, TARGET_START, TARGET_END, TRACKING_START, TRACKING_END, LASTDAYOFWEEK)
    values (:branch_no, :bus_name, :hidden_no, :curr_name, :curr_symbol, :conversion, :p_start, :p_end, :p_start, :p_end, :last_day);
  insert into departments (DEPT_ID, BRANCH_ID, REVENUE_GROUP_NAME, EXCLUDE_FROM_REPORTING, CURRENCY, LASTDAYOFWEEK, CURRENTPLANSTART, CURRENTPLANEND, CURRENTMONITORINGSTART, CURRENTMONITORINGEND, HIDDEN_DEPT, SYNC_TARGETDATE, SYNC_TRACKDATE, EXCLUDE_FROM_CASHFLOW) values
  (:hidden_no, :branch_no, 'Hidden', 1, :curr_symbol, :last_day, :p_start, :p_end, :m_start, :m_end, 1, 1, 1, 0);
  if (:no_branches = 1) then
    begin
    for select dept_id from departments where (HIDDEN_DEPT = 0) or (HIDDEN_DEPT is NULL)  into :default_dept do
      begin
      update departments set BRANCH_ID = :branch_no, HIDDEN_DEPT = 0, SYNC_TARGETDATE = 0, SYNC_TRACKDATE = 0, EXCLUDE_FROM_CASHFLOW = 0 where DEPT_ID = :default_dept;
      end
    end
  suspend;
end^



SET TERM ; ^



/******************************************************************************/
/****                                Roles                                 ****/
/******************************************************************************/

CREATE ROLE FBMADMIN;
CREATE ROLE GENERALUSER;
CREATE ROLE MANAGEMENT;


/******************************************************************************/
/****                              Privileges                              ****/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON ACCOUNT_GROUPS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON ACCOUNT_NOTES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON ACCOUNT_TITLES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON ACTUAL TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON ACTUAL_INVOICE_DETAILS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON BUSINESSHOURS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON BUSINESS_BRANCH TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON BUSINESS_DETAILS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON CASH_TIMING TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON DATERANGERS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON DEPARTMENTS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON DEPT_ACCOUNTS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON DEPT_OPTION_GROUPS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON DETAILED_BALANCES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON IMPORTED_DATA TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON IMPORT_HEADER TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON IMPORT_TEMPLATES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON JNL_ENTRIES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON JOURNAL TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON LICENCING TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON LOSYSTEM TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON OPTIONNAMES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON QUOTES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON SUMMARYINTERVALS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON TEMPLATE_DETAILS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON TRACKING_JENTRIES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON TRACKING_JOURNAL TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON TRANSACTIONS TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON TRANS_SOURCES TO "ADMIN" WITH GRANT OPTION;
GRANT ALL ON USER_OPTIONS TO "ADMIN" WITH GRANT OPTION;
GRANT FBMADMIN TO "ADMIN" WITH ADMIN OPTION;
GRANT ALL ON ACCOUNT_GROUPS TO ADMINS WITH GRANT OPTION;
GRANT ALL ON ACCOUNT_NOTES TO ADMINS WITH GRANT OPTION;
GRANT ALL ON ACCOUNT_TITLES TO ADMINS WITH GRANT OPTION;
GRANT ALL ON ACTUAL TO ADMINS;
GRANT ALL ON ACTUAL_INVOICE_DETAILS TO ADMINS;
GRANT ALL ON BUSINESSHOURS TO ADMINS;
GRANT ALL ON BUSINESS_BRANCH TO ADMINS WITH GRANT OPTION;
GRANT ALL ON BUSINESS_DETAILS TO ADMINS WITH GRANT OPTION;
GRANT ALL ON CASH_TIMING TO ADMINS;
GRANT ALL ON DATERANGERS TO ADMINS;
GRANT ALL ON DEPARTMENTS TO ADMINS;
GRANT ALL ON DEPT_ACCOUNTS TO ADMINS;
GRANT ALL ON DEPT_OPTION_GROUPS TO ADMINS;
GRANT ALL ON DETAILED_BALANCES TO ADMINS;
GRANT ALL ON IMPORTED_DATA TO ADMINS;
GRANT ALL ON IMPORT_HEADER TO ADMINS;
GRANT ALL ON IMPORT_TEMPLATES TO ADMINS;
GRANT ALL ON JNL_ENTRIES TO ADMINS;
GRANT ALL ON JOURNAL TO ADMINS;
GRANT ALL ON LICENCING TO ADMINS;
GRANT ALL ON LOSYSTEM TO ADMINS;
GRANT ALL ON OPTIONNAMES TO ADMINS;
GRANT ALL ON QUOTES TO ADMINS;
GRANT ALL ON SUMMARYINTERVALS TO ADMINS;
GRANT ALL ON TEMPLATE_DETAILS TO ADMINS;
GRANT ALL ON TRACKING_JENTRIES TO ADMINS;
GRANT ALL ON TRACKING_JOURNAL TO ADMINS;
GRANT ALL ON TRANSACTIONS TO ADMINS;
GRANT ALL ON TRANS_SOURCES TO ADMINS;
GRANT ALL ON USER_OPTIONS TO ADMINS;
GRANT EXECUTE ON PROCEDURE CREATE_BUSINESS TO ADMINS;
GRANT FBMADMIN TO ADMINS;
GRANT FBMADMIN TO MARILYN;
GRANT ALL ON ACCOUNT_GROUPS TO PUBLIC;
GRANT ALL ON ACCOUNT_NOTES TO PUBLIC;
GRANT ALL ON ACCOUNT_TITLES TO PUBLIC;
GRANT ALL ON ACTUAL TO PUBLIC;
GRANT ALL ON ACTUAL_INVOICE_DETAILS TO PUBLIC;
GRANT ALL ON BUSINESSHOURS TO PUBLIC;
GRANT ALL ON BUSINESS_BRANCH TO PUBLIC;
GRANT ALL ON BUSINESS_DETAILS TO PUBLIC;
GRANT ALL ON CASH_TIMING TO PUBLIC;
GRANT ALL ON DATERANGERS TO PUBLIC;
GRANT ALL ON DEPARTMENTS TO PUBLIC;
GRANT ALL ON DEPT_ACCOUNTS TO PUBLIC;
GRANT ALL ON DEPT_OPTION_GROUPS TO PUBLIC;
GRANT ALL ON DETAILED_BALANCES TO PUBLIC;
GRANT ALL ON IMPORTED_DATA TO PUBLIC;
GRANT ALL ON IMPORT_HEADER TO PUBLIC;
GRANT ALL ON IMPORT_TEMPLATES TO PUBLIC;
GRANT ALL ON JNL_ENTRIES TO PUBLIC;
GRANT ALL ON JOURNAL TO PUBLIC;
GRANT ALL ON LICENCING TO PUBLIC;
GRANT ALL ON LOSYSTEM TO PUBLIC;
GRANT ALL ON OPTIONNAMES TO PUBLIC;
GRANT ALL ON QUOTES TO PUBLIC;
GRANT ALL ON SUMMARYINTERVALS TO PUBLIC;
GRANT ALL ON TEMPLATE_DETAILS TO PUBLIC;
GRANT ALL ON TRACKING_JENTRIES TO PUBLIC;
GRANT ALL ON TRACKING_JOURNAL TO PUBLIC;
GRANT ALL ON TRANSACTIONS TO PUBLIC;
GRANT ALL ON TRANS_SOURCES TO PUBLIC;
GRANT ALL ON USER_OPTIONS TO PUBLIC;
GRANT EXECUTE ON PROCEDURE CREATE_BUSINESS TO PUBLIC;
GRANT FBMADMIN TO TREVOR;

/* Privileges of roles */
GRANT ALL ON ACCOUNT_GROUPS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON ACCOUNT_NOTES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON ACCOUNT_TITLES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON ACTUAL TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON ACTUAL_INVOICE_DETAILS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON BUSINESSHOURS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON BUSINESS_BRANCH TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON BUSINESS_DETAILS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON CASH_TIMING TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON DATERANGERS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON DEPARTMENTS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON DEPT_ACCOUNTS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON DEPT_OPTION_GROUPS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON DETAILED_BALANCES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON IMPORTED_DATA TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON IMPORT_HEADER TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON IMPORT_TEMPLATES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON JNL_ENTRIES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON JOURNAL TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON LICENCING TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON LOSYSTEM TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON OPTIONNAMES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON QUOTES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON SUMMARYINTERVALS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON TEMPLATE_DETAILS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON TRACKING_JENTRIES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON TRACKING_JOURNAL TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON TRANSACTIONS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON TRANS_SOURCES TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON USER_OPTIONS TO FBMADMIN WITH GRANT OPTION;
GRANT EXECUTE ON PROCEDURE CREATE_BUSINESS TO FBMADMIN WITH GRANT OPTION;
GRANT ALL ON ACCOUNT_GROUPS TO GENERALUSER;
GRANT ALL ON ACCOUNT_NOTES TO GENERALUSER;
GRANT ALL ON ACCOUNT_TITLES TO GENERALUSER;
GRANT ALL ON ACTUAL TO GENERALUSER;
GRANT ALL ON ACTUAL_INVOICE_DETAILS TO GENERALUSER;
GRANT ALL ON BUSINESSHOURS TO GENERALUSER WITH GRANT OPTION;
GRANT ALL ON BUSINESS_BRANCH TO GENERALUSER;
GRANT ALL ON BUSINESS_DETAILS TO GENERALUSER;
GRANT ALL ON CASH_TIMING TO GENERALUSER;
GRANT ALL ON DATERANGERS TO GENERALUSER;
GRANT ALL ON DEPARTMENTS TO GENERALUSER;
GRANT ALL ON DEPT_ACCOUNTS TO GENERALUSER WITH GRANT OPTION;
GRANT ALL ON DEPT_OPTION_GROUPS TO GENERALUSER WITH GRANT OPTION;
GRANT ALL ON DETAILED_BALANCES TO GENERALUSER;
GRANT ALL ON IMPORTED_DATA TO GENERALUSER;
GRANT ALL ON IMPORT_HEADER TO GENERALUSER;
GRANT ALL ON IMPORT_TEMPLATES TO GENERALUSER;
GRANT ALL ON JNL_ENTRIES TO GENERALUSER;
GRANT ALL ON JOURNAL TO GENERALUSER;
GRANT ALL ON LICENCING TO GENERALUSER;
GRANT ALL ON LOSYSTEM TO GENERALUSER;
GRANT ALL ON OPTIONNAMES TO GENERALUSER WITH GRANT OPTION;
GRANT ALL ON QUOTES TO GENERALUSER;
GRANT ALL ON SUMMARYINTERVALS TO GENERALUSER;
GRANT ALL ON TEMPLATE_DETAILS TO GENERALUSER;
GRANT ALL ON TRACKING_JENTRIES TO GENERALUSER;
GRANT ALL ON TRACKING_JOURNAL TO GENERALUSER;
GRANT ALL ON TRANSACTIONS TO GENERALUSER;
GRANT ALL ON TRANS_SOURCES TO GENERALUSER;
GRANT ALL ON USER_OPTIONS TO GENERALUSER;
GRANT EXECUTE ON PROCEDURE CREATE_BUSINESS TO GENERALUSER;
GRANT ALL ON ACCOUNT_GROUPS TO MANAGEMENT;
GRANT ALL ON ACCOUNT_NOTES TO MANAGEMENT;
GRANT ALL ON ACCOUNT_TITLES TO MANAGEMENT;
GRANT ALL ON ACTUAL TO MANAGEMENT;
GRANT ALL ON ACTUAL_INVOICE_DETAILS TO MANAGEMENT;
GRANT ALL ON BUSINESSHOURS TO MANAGEMENT WITH GRANT OPTION;
GRANT ALL ON BUSINESS_BRANCH TO MANAGEMENT;
GRANT ALL ON BUSINESS_DETAILS TO MANAGEMENT;
GRANT ALL ON CASH_TIMING TO MANAGEMENT;
GRANT ALL ON DATERANGERS TO MANAGEMENT;
GRANT ALL ON DEPARTMENTS TO MANAGEMENT;
GRANT ALL ON DEPT_ACCOUNTS TO MANAGEMENT WITH GRANT OPTION;
GRANT ALL ON DEPT_OPTION_GROUPS TO MANAGEMENT WITH GRANT OPTION;
GRANT ALL ON DETAILED_BALANCES TO MANAGEMENT;
GRANT ALL ON IMPORTED_DATA TO MANAGEMENT;
GRANT ALL ON IMPORT_HEADER TO MANAGEMENT;
GRANT ALL ON IMPORT_TEMPLATES TO MANAGEMENT;
GRANT ALL ON JNL_ENTRIES TO MANAGEMENT;
GRANT ALL ON JOURNAL TO MANAGEMENT;
GRANT ALL ON LICENCING TO MANAGEMENT;
GRANT ALL ON LOSYSTEM TO MANAGEMENT;
GRANT ALL ON OPTIONNAMES TO MANAGEMENT WITH GRANT OPTION;
GRANT ALL ON QUOTES TO MANAGEMENT;
GRANT ALL ON SUMMARYINTERVALS TO MANAGEMENT;
GRANT ALL ON TEMPLATE_DETAILS TO MANAGEMENT;
GRANT ALL ON TRACKING_JENTRIES TO MANAGEMENT;
GRANT ALL ON TRACKING_JOURNAL TO MANAGEMENT;
GRANT ALL ON TRANSACTIONS TO MANAGEMENT;
GRANT ALL ON TRANS_SOURCES TO MANAGEMENT;
GRANT ALL ON USER_OPTIONS TO MANAGEMENT;
GRANT EXECUTE ON PROCEDURE CREATE_BUSINESS TO MANAGEMENT;
